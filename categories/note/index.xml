<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Note on 懒人的梦呓</title>
    <link>https://cjianyu.github.io/categories/note/</link>
    <description>Recent content in Note on 懒人的梦呓</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <lastBuildDate>Wed, 27 Mar 2024 22:54:08 +0800</lastBuildDate>
    
	<atom:link href="https://cjianyu.github.io/categories/note/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>一份完整的美股开户指南</title>
      <link>https://cjianyu.github.io/post/open_account_of_stock/</link>
      <pubDate>Wed, 27 Mar 2024 22:54:08 +0800</pubDate>
      
      <guid>https://cjianyu.github.io/post/open_account_of_stock/</guid>
      <description>&lt;p&gt;我在上篇文章写到：&lt;/p&gt;

&lt;p&gt;“扩大生产资料的占有比重是获得财富也是衡量财富的唯一手段“&lt;/p&gt;

&lt;p&gt;那么，扩大生产资料的占有比重很重要的一种方式，就是购买优质公司的股权。全世界最优质的公司几乎都在美国上市，不能说百分之百，因为确实有一些优质公司是在其他市场上市的，但正如我之前所说的，其他市场有或多或少的原因，不一定健康，而美股市场，是最健康的市场，没有之一。&lt;/p&gt;

&lt;p&gt;总有人问我，怎么投资美股，而一两句话说不清楚，故写此文，以后还有人问我就可以直接把链接转发给他，按照步骤一步步做就能顺利开启投资美股之路。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>如何正确科学上网</title>
      <link>https://cjianyu.github.io/post/howtosurfinternet/</link>
      <pubDate>Sun, 03 Mar 2024 21:35:38 +0800</pubDate>
      
      <guid>https://cjianyu.github.io/post/howtosurfinternet/</guid>
      <description>&lt;p&gt;有时候朋友问我，怎么科学上网，我总是需要一遍又一遍的教他们，给他们信息，告诉他们怎么做怎么做。即使我已经说的很明白了，哪怕他们会简单进行搜索一下，也就搞定了，但很多朋友觉得麻烦，就放弃了。这篇文章讲清楚如何进行科学上网，以后别人再问我类似的问题，我就丢文章链接就好了。&lt;/p&gt;

&lt;p&gt;对于嫌麻烦的朋友，我建议直接用&lt;a href=&#34;https://github.com/geph-official/geph4/wiki/%E8%BF%B7%E9%9B%BE%E9%80%9A%EF%BC%88%E5%85%8D%E7%BF%BB%E5%A2%99%E9%95%9C%E5%83%8F%EF%BC%89&#34;&gt;迷雾通&lt;/a&gt;，但只在非iPhone的设备上能用。这个软件非常稳定，我经常作为备用。下载安装好软件之后，随便注册一个账号，然后点击连接按钮就可以用了，完全免费。如果你对速度有要求，也可以直接付费，取消速度限制。&lt;/p&gt;

&lt;p&gt;至于iPhone用户，就有点麻烦。首先，你需要有一个非国区的Apple ID，登陆app store，然后下载一个代理软件，比如shadowrocket（几块钱）、surge(贵）、potatso light(免费），如果你有选择困难症，不用纠结，直接买shadowrocket。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>币安注册教程，币安实名认证教程</title>
      <link>https://cjianyu.github.io/post/%E5%B8%81%E5%AE%89%E6%B3%A8%E5%86%8C%E6%95%99%E7%A8%8B%E5%B8%81%E5%AE%89%E5%AE%9E%E5%90%8D%E8%AE%A4%E8%AF%81kyc%E6%95%99%E7%A8%8B/</link>
      <pubDate>Sat, 14 May 2022 23:58:53 +0800</pubDate>
      
      <guid>https://cjianyu.github.io/post/%E5%B8%81%E5%AE%89%E6%B3%A8%E5%86%8C%E6%95%99%E7%A8%8B%E5%B8%81%E5%AE%89%E5%AE%9E%E5%90%8D%E8%AE%A4%E8%AF%81kyc%E6%95%99%E7%A8%8B/</guid>
      <description>&lt;p&gt;注册时在推荐人ID里填写175026511。&lt;/p&gt;

&lt;p&gt;我们知道大陆已经禁止了数字货币的交易，但如果要投身web 3，怎么可能不在交易所购买点币呢。这篇文章会手把手教你如何进行币安注册并且实名认证，获得现货购买以及合约交易的全部功能。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Telegram导航</title>
      <link>https://cjianyu.github.io/post/telegram%E9%A2%91%E9%81%93%E6%8E%A8%E8%8D%90/</link>
      <pubDate>Sat, 11 Sep 2021 23:26:47 +0800</pubDate>
      
      <guid>https://cjianyu.github.io/post/telegram%E9%A2%91%E9%81%93%E6%8E%A8%E8%8D%90/</guid>
      <description>&lt;p&gt;我们知道社交产品要玩起来，首先得有人跟你产生连接，或者有内容可以消费。Telegram对于新用户来说，最大的困难不是科学上网，不是什么功能怎么用，而是，刚注册不知道接下来干什么，不知道和谁聊天。我在这篇文章里推荐一些我觉得好的频道或者群组，可以让新人快速用起来。&lt;/p&gt;

&lt;p&gt;这篇文章会长期更新，有好的频道我会加上去。当然，你也可以通过Google搜索相应的群或者频道，比如「英语 telegram群」进行搜索，一般都会有。你还可以通过一些telegram里的bot进行探索，这类bot也挺多的。不过鱼龙混杂，我在这里只推荐值得推荐的。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Git常用命令</title>
      <link>https://cjianyu.github.io/post/git%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4/</link>
      <pubDate>Sun, 27 Jun 2021 23:28:58 +0800</pubDate>
      
      <guid>https://cjianyu.github.io/post/git%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4/</guid>
      <description>git log git branch -v 查看本地有哪些分支 git log &amp;ndash;oneline 更简洁查看git log git log -n2 &amp;ndash;oneline 查看最近两次log git log &amp;ndash;oneline &amp;ndash;all 查看所有的log git log &amp;ndash;oneline &amp;ndash;graph 图形化查看log git log develop &amp;ndash;graph 查看d</description>
    </item>
    
    <item>
      <title>几个常用的快捷键</title>
      <link>https://cjianyu.github.io/post/%E5%87%A0%E4%B8%AA%E5%B8%B8%E7%94%A8%E7%9A%84%E5%BF%AB%E6%8D%B7%E9%94%AE/</link>
      <pubDate>Sun, 27 Jun 2021 23:26:47 +0800</pubDate>
      
      <guid>https://cjianyu.github.io/post/%E5%87%A0%E4%B8%AA%E5%B8%B8%E7%94%A8%E7%9A%84%E5%BF%AB%E6%8D%B7%E9%94%AE/</guid>
      <description>打开Chrome跨域模式 要关闭浏览器所有页面才会执行 1 open -n &amp;#34;/Applications/Google Chrome.app&amp;#34; --args --disable-web-security --user-data-dir=/Users/jeffrey/MyChromeDevUserData/ vscode快捷键 command + left/right: 一行左右切换 option + left/right: 单词切分，左右切换 option + delete: del</description>
    </item>
    
    <item>
      <title>Javascript之模拟实现</title>
      <link>https://cjianyu.github.io/post/javascript%E4%B9%8B%E6%A8%A1%E6%8B%9F%E5%AE%9E%E7%8E%B0/</link>
      <pubDate>Sun, 27 Jun 2021 23:24:34 +0800</pubDate>
      
      <guid>https://cjianyu.github.io/post/javascript%E4%B9%8B%E6%A8%A1%E6%8B%9F%E5%AE%9E%E7%8E%B0/</guid>
      <description>模拟实现call 1 2 3 4 5 6 7 8 9 10 11 12 Function.prototype.myCall = function(context) { // 判断调用call的函数（也就是this）是否是函数 if(typeof this === &amp;#39;function&amp;#39;) { throw new TypeError(&amp;#39;Error&amp;#39;) } context = context || window context.fn = this const args =</description>
    </item>
    
    <item>
      <title>写给普通人的投资入门手册</title>
      <link>https://cjianyu.github.io/post/%E5%86%99%E7%BB%99%E6%99%AE%E9%80%9A%E4%BA%BA%E7%9A%84%E6%8A%95%E8%B5%84%E5%85%A5%E9%97%A8%E6%89%8B%E5%86%8C/</link>
      <pubDate>Sat, 06 Jun 2020 16:12:34 +0800</pubDate>
      
      <guid>https://cjianyu.github.io/post/%E5%86%99%E7%BB%99%E6%99%AE%E9%80%9A%E4%BA%BA%E7%9A%84%E6%8A%95%E8%B5%84%E5%85%A5%E9%97%A8%E6%89%8B%E5%86%8C/</guid>
      <description>全球大水漫灌，货币迅速贬值，越来越多人意识到投资理财的重要性。但是，新人往往一开始不知道如何开始理财，也不知道方向在哪，所以有了这篇文章，帮</description>
    </item>
    
    <item>
      <title>如何先于他人一步买到大麦网的演唱会门票</title>
      <link>https://cjianyu.github.io/post/%E5%A6%82%E4%BD%95%E5%85%88%E4%BA%8E%E4%BB%96%E4%BA%BA%E4%B8%80%E6%AD%A5%E4%B9%B0%E5%88%B0%E5%A4%A7%E9%BA%A6%E7%BD%91%E7%9A%84%E6%BC%94%E5%94%B1%E4%BC%9A%E9%97%A8%E7%A5%A8/</link>
      <pubDate>Sat, 21 Dec 2019 23:22:38 +0800</pubDate>
      
      <guid>https://cjianyu.github.io/post/%E5%A6%82%E4%BD%95%E5%85%88%E4%BA%8E%E4%BB%96%E4%BA%BA%E4%B8%80%E6%AD%A5%E4%B9%B0%E5%88%B0%E5%A4%A7%E9%BA%A6%E7%BD%91%E7%9A%84%E6%BC%94%E5%94%B1%E4%BC%9A%E9%97%A8%E7%A5%A8/</guid>
      <description>前些日子很多人在哭诉抢不到周杰伦的演唱会门票，我想起几个月前发现过大麦网的一个bug，能在门票开售的时候先于他人一步进入到下单页面，也就是说</description>
    </item>
    
    <item>
      <title>JavaScript异步编程</title>
      <link>https://cjianyu.github.io/post/javascript%E5%BC%82%E6%AD%A5%E7%BC%96%E7%A8%8B/</link>
      <pubDate>Wed, 13 Nov 2019 17:18:18 +0800</pubDate>
      
      <guid>https://cjianyu.github.io/post/javascript%E5%BC%82%E6%AD%A5%E7%BC%96%E7%A8%8B/</guid>
      <description>在讲JavaScript异步编程之前我们先来了解并发和并行的区别。 并发和并行的区别 Erlang 之父 Joe Armstrong用一张图解释了并发和并行的区别：</description>
    </item>
    
    <item>
      <title>浏览器缓存简短笔记</title>
      <link>https://cjianyu.github.io/post/%E6%B5%8F%E8%A7%88%E5%99%A8%E7%BC%93%E5%AD%98%E6%9C%BA%E5%88%B6/</link>
      <pubDate>Thu, 07 Nov 2019 19:44:06 +0800</pubDate>
      
      <guid>https://cjianyu.github.io/post/%E6%B5%8F%E8%A7%88%E5%99%A8%E7%BC%93%E5%AD%98%E6%9C%BA%E5%88%B6/</guid>
      <description>&lt;p&gt;浏览器缓存机制的关键：&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;浏览器每次发起请求，都会先在浏览器缓存中查找该请求的结果以及缓存标识&lt;/li&gt;
&lt;li&gt;浏览器每次拿到返回的请求结果都会将该结果和缓存标识存入浏览器缓存中&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;缓存分为两个过程：强制缓存和协商缓存。发送请求的时候先进行强制缓存，如果强制缓存失效，则进行协商缓存。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Webpack入门教程</title>
      <link>https://cjianyu.github.io/post/webpack-basic/</link>
      <pubDate>Thu, 18 Jul 2019 23:50:22 +0800</pubDate>
      
      <guid>https://cjianyu.github.io/post/webpack-basic/</guid>
      <description>&lt;h3 id=&#34;为什么要用构建工具&#34;&gt;为什么要用构建工具&lt;/h3&gt;

&lt;p&gt;转换es6、转换jsx、css前缀补全/预处理器、压缩混淆、图片压缩&lt;/p&gt;

&lt;h3 id=&#34;初识webpack&#34;&gt;初识webpack&lt;/h3&gt;

&lt;p&gt;webpack默认文件是webpack.config.js，当然，你也可以根据自己的需要进行更改，通过：webpack       — config 指定配置文件，webpack一般包含以下内容：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-javascript&#34; data-lang=&#34;javascript&#34;&gt;&lt;span class=&#34;lnt&#34;&gt; 1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 5
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 6
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 7
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 8
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 9
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;10
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;11
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;12
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;13
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;14
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;15
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;16
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;17
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;18
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;19
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;20
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;21
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-javascript&#34; data-lang=&#34;javascript&#34;&gt;&lt;span class=&#34;nx&#34;&gt;module&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;exports&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
  &lt;span class=&#34;nx&#34;&gt;entry&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;./src/index.js&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;c1&#34;&gt;// 打包的入口文件
&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;  &lt;span class=&#34;nx&#34;&gt;output&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;./dist/main.js&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;c1&#34;&gt;// 打包的输出
&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;  &lt;span class=&#34;nx&#34;&gt;mode&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;production&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;c1&#34;&gt;// 环境
&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;  &lt;span class=&#34;nx&#34;&gt;module&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
    &lt;span class=&#34;nx&#34;&gt;rules&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;
      &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;test&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;sr&#34;&gt;/\.text/&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;use&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;raw-loader&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;  &lt;span class=&#34;c1&#34;&gt;// Loader配置
&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;    &lt;span class=&#34;p&#34;&gt;]&lt;/span&gt;
  &lt;span class=&#34;p&#34;&gt;},&lt;/span&gt;
  &lt;span class=&#34;nx&#34;&gt;plugin&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;                                   &lt;span class=&#34;c1&#34;&gt;// plugin配置
&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;    &lt;span class=&#34;k&#34;&gt;new&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;HtmlWebpackPlugin&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;({&lt;/span&gt;
        &lt;span class=&#34;nx&#34;&gt;template&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;./src/index.html&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;c1&#34;&gt;// 所用的模版
&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;        &lt;span class=&#34;nx&#34;&gt;filename&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;index.html&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;c1&#34;&gt;// 打包后的文件名
&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;        &lt;span class=&#34;nx&#34;&gt;minify&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;  &lt;span class=&#34;c1&#34;&gt;// 压缩html
&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;          &lt;span class=&#34;nx&#34;&gt;removeAttributeQuotes&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;kc&#34;&gt;true&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;c1&#34;&gt;// 去掉双引号
&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;          &lt;span class=&#34;nx&#34;&gt;collapseWhiteSpace&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;kc&#34;&gt;true&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;c1&#34;&gt;// 变成一行
&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;        &lt;span class=&#34;p&#34;&gt;},&lt;/span&gt;
        &lt;span class=&#34;nx&#34;&gt;hash&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;kc&#34;&gt;true&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;c1&#34;&gt;// 添加hash
&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;      &lt;span class=&#34;p&#34;&gt;})&lt;/span&gt;
  &lt;span class=&#34;p&#34;&gt;]&lt;/span&gt;
&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;</description>
    </item>
    
    <item>
      <title>用css实现单行截断与多行截断，最后以省略号结尾</title>
      <link>https://cjianyu.github.io/post/%E7%94%A8css%E5%AE%9E%E7%8E%B0%E5%8D%95%E8%A1%8C%E6%88%AA%E6%96%AD%E4%B8%8E%E5%A4%9A%E8%A1%8C%E6%88%AA%E6%96%AD/</link>
      <pubDate>Thu, 06 Jun 2019 16:12:34 +0800</pubDate>
      
      <guid>https://cjianyu.github.io/post/%E7%94%A8css%E5%AE%9E%E7%8E%B0%E5%8D%95%E8%A1%8C%E6%88%AA%E6%96%AD%E4%B8%8E%E5%A4%9A%E8%A1%8C%E6%88%AA%E6%96%AD/</guid>
      <description>&lt;p&gt;有个很常见的业务场景，就是实现单行截断或者使用多行截断，最后要以省略号结尾。比如某个商品的标题太长，在有限区域内不能完全展示，如果要全部展示，页面就会很丑，所以要单行或多行截断。这里记录一下常见的解决办法。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>金融学笔记</title>
      <link>https://cjianyu.github.io/post/%E9%87%91%E8%9E%8D%E5%AD%A6%E7%AC%94%E8%AE%B0/</link>
      <pubDate>Wed, 06 Jun 2018 16:12:34 +0800</pubDate>
      
      <guid>https://cjianyu.github.io/post/%E9%87%91%E8%9E%8D%E5%AD%A6%E7%AC%94%E8%AE%B0/</guid>
      <description>&lt;p&gt;金融的第一定理：时间是有价值的。&lt;/p&gt;

&lt;p&gt;老生常谈的“时间就是金钱”，在金融里面，同样是常识的存在。体现在哪里呢？时间通过金融工具的包装，可以将我们今天的本钱，在未来增值很多倍。比如说，十年前，你在一线城市买了房。又比如说，十年前，你买了腾讯的股票。所以我们常说的理财，就是希望通过金融决策，将时间加工，将未来转化成完全不一样的价值，而不是等着财富因通货膨胀而缩水。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>心理学之自控</title>
      <link>https://cjianyu.github.io/post/%E5%BF%83%E7%90%86%E5%AD%A6%E4%B9%8B%E8%87%AA%E6%8E%A7/</link>
      <pubDate>Mon, 14 Nov 2016 23:58:53 +0800</pubDate>
      
      <guid>https://cjianyu.github.io/post/%E5%BF%83%E7%90%86%E5%AD%A6%E4%B9%8B%E8%87%AA%E6%8E%A7/</guid>
      <description>&lt;p&gt;双十一的时候忍不住疯狂购物，学习与工作的时候忍不住刷社交媒体网站，减肥的时候忍不住吃甜食，失眠的时候越是想入睡越睡不着，这背后发生了什么？为什么人总是控制不住自己？&lt;/p&gt;

&lt;p&gt;凯利·麦格尼格尔的《自控力》为你揭示了自控的本质以及如何提高自控力。&lt;/p&gt;

&lt;p&gt;这本书里写道，人脑的前额皮质分成了三个区域，分管着“我要做”、”我不要“和”我想要“三种力量。”我不要“的力量，让人们在面对诱惑时无法说”不“，而”我要做“的力量驱使人在诱惑面前仍然做完必须完成的任务，”我想要“的力量则让你时刻牢记自己真正想要的是什么，即记住长远目标。如果可以驾驭好这三种力量，你就可以实现目标，远离诱惑。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>光环何以影响判断</title>
      <link>https://cjianyu.github.io/post/%E5%85%89%E7%8E%AF%E4%BD%95%E4%BB%A5%E5%BD%B1%E5%93%8D%E5%88%A4%E6%96%AD/</link>
      <pubDate>Sun, 30 Oct 2016 23:58:53 +0800</pubDate>
      
      <guid>https://cjianyu.github.io/post/%E5%85%89%E7%8E%AF%E4%BD%95%E4%BB%A5%E5%BD%B1%E5%93%8D%E5%88%A4%E6%96%AD/</guid>
      <description>根据近日数据，第三季度，OPPO的市场份额占16.6%，vivo的市场占有率为16.2%，名列全国第一第二，而华为的市场占有率却从去年三季度</description>
    </item>
    
  </channel>
</rss>